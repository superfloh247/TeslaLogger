using System.Collections.Generic;

namespace MockServer
{
    public class DBSchema
    {
        public DBSchema()
        {
        }

        internal static Dictionary<string, string> tables = new Dictionary<string, string>() {
            { "charge_state" , "ms_charge_state" },
            { "climate_state", "ms_climate_state" },
            { "drive_state", "ms_drive_state" },
            { "vehicle_config", "ms_vehicle_config" },
            { "vehicle_state", "ms_vehicle_state" },
            { "vehicles", "ms_vehicles" },
        };

        internal static Dictionary<string, Dictionary<string, string>> EndpointFieldDBType = new Dictionary<string, Dictionary<string, string>>()
        {
            { "charge_state" , new Dictionary<string, string>() {
                { "battery_heater_on", "BOOL" },
                { "battery_level", "BIGINT" },
                { "battery_range", "DOUBLE" },
                { "charge_current_request", "BIGINT" },
                { "charge_current_request_max", "BIGINT" },
                { "charge_enable_request", "BOOL" },
                { "charge_energy_added", "DOUBLE" },
                { "charge_limit_soc", "BIGINT" },
                { "charge_limit_soc_max", "BIGINT" },
                { "charge_limit_soc_min", "BIGINT" },
                { "charge_limit_soc_std", "BIGINT" },
                { "charge_miles_added_ideal", "DOUBLE" },
                { "charge_miles_added_rated", "DOUBLE" },
                { "charge_port_cold_weather_mode", "BOOL" },
                { "charge_port_door_open", "BOOL" },
                { "charge_port_latch", "TEXT" },
                { "charge_rate", "DOUBLE" },
                { "charge_to_max_range", "BOOL" },
                { "charger_actual_current", "BIGINT" },
                { "charger_phases", "BIGINT" },
                { "charger_pilot_current", "BIGINT" },
                { "charger_power", "BIGINT" },
                { "charger_voltage", "BIGINT" },
                { "charging_state", "TEXT" },
                { "conn_charge_cable", "TEXT" },
                { "est_battery_range", "DOUBLE" },
                { "fast_charger_brand", "TEXT" },
                { "fast_charger_present", "BOOL" },
                { "fast_charger_type", "TEXT" },
                { "ideal_battery_range", "DOUBLE" },
                { "managed_charging_active", "BOOL" },
                { "managed_charging_start_time", "BIGINT" },
                { "managed_charging_user_canceled", "BOOL" },
                { "max_range_charge_counter", "BIGINT" },
                { "minutes_to_full_charge", "BIGINT" },
                { "not_enough_power_to_heat", "BOOL" },
                { "scheduled_charging_pending", "BOOL" },
                { "scheduled_charging_start_time", "BIGINT" },
                { "time_to_full_charge", "DOUBLE" },
                { "timestamp", "BIGINT" },
                { "trip_charging", "BOOL" },
                { "usable_battery_level", "BIGINT" },
                { "user_charge_enable_request", "BOOL" },
            } },
            { "climate_state" , new Dictionary<string, string>() {
                { "battery_heater", "BOOL" },
                { "battery_heater_no_power", "BOOL" },
                { "climate_keeper_mode", "TEXT" },
                { "defrost_mode", "BIGINT" },
                { "driver_temp_setting", "DOUBLE" },
                { "fan_status", "BIGINT" },
                { "inside_temp", "DOUBLE" },
                { "is_auto_conditioning_on", "BOOL" },
                { "is_climate_on", "BOOL" },
                { "is_front_defroster_on", "BOOL" },
                { "is_preconditioning", "BOOL" },
                { "is_rear_defroster_on", "BOOL" },
                { "left_temp_direction", "BIGINT" },
                { "max_avail_temp", "DOUBLE" },
                { "min_avail_temp", "DOUBLE" },
                { "outside_temp", "DOUBLE" },
                { "passenger_temp_setting", "DOUBLE" },
                { "remote_heater_control_enabled", "BOOL" },
                { "right_temp_direction", "BIGINT" },
                { "seat_heater_left", "BIGINT" },
                { "seat_heater_rear_center", "BIGINT" },
                { "seat_heater_rear_left", "BIGINT" },
                { "seat_heater_rear_left_back", "BIGINT" },
                { "seat_heater_rear_right", "BIGINT" },
                { "seat_heater_rear_right_back", "BIGINT" },
                { "seat_heater_right", "BIGINT" },
                { "side_mirror_heaters", "BOOL" },
                { "steering_wheel_heater", "BOOL" },
                { "timestamp", "BIGINT" },
                { "wiper_blade_heater", "BOOL" },
            } },
            { "drive_state" , new Dictionary<string, string>() {
                { "gps_as_of", "BIGINT" },
                { "heading", "BIGINT" },
                { "latitude", "DOUBLE" },
                { "longitude", "DOUBLE" },
                { "native_latitude", "DOUBLE" },
                { "native_location_supported", "BIGINT" },
                { "native_longitude", "DOUBLE" },
                { "native_type", "TEXT" },
                { "power", "BIGINT" },
                { "shift_state", "TEXT" },
                { "speed", "BIGINT" },
                { "timestamp", "BIGINT" },
            } },
            { "vehicle_state" , new Dictionary<string, string>() {
                { "api_version", "BIGINT" },
                { "autopark_state_v3", "TEXT" },
                { "autopark_style", "TEXT" },
                { "calendar_supported", "BOOL" },
                { "car_version", "TEXT" },
                { "center_display_state", "BIGINT" },
                { "df", "BIGINT" },
                { "dr", "BIGINT" },
                { "fd_window", "BIGINT" },
                { "fp_window", "BIGINT" },
                { "ft", "BIGINT" },
                { "homelink_device_count", "BIGINT" },
                { "homelink_nearby", "BOOL" },
                { "is_user_present", "BOOL" },
                { "last_autopark_error", "TEXT" },
                { "locked", "BOOL" },
                { "media_state__remote_control_enabled", "BOOL" },
                { "notifications_supported", "BOOL" },
                { "odometer", "DOUBLE" },
                { "parsed_calendar_supported", "BOOL" },
                { "pf", "BIGINT" },
                { "pr", "BIGINT" },
                { "rd_window", "BIGINT" },
                { "remote_start", "BOOL" },
                { "remote_start_enabled", "BOOL" },
                { "remote_start_supported", "BOOL" },
                { "rp_window", "BIGINT" },
                { "rt", "BIGINT" },
                { "sentry_mode", "BOOL" },
                { "sentry_mode_available", "BOOL" },
                { "smart_summon_available", "BOOL" },
                { "software_update__download_perc", "BIGINT" },
                { "software_update__expected_duration_sec", "BIGINT" },
                { "software_update__install_perc", "BIGINT" },
                { "software_update__scheduled_time_ms", "BIGINT" },
                { "software_update__status", "TEXT" },
                { "software_update__version", "TEXT" },
                { "speed_limit_mode__active", "BOOL" },
                { "speed_limit_mode__current_limit_mph", "DOUBLE" },
                { "speed_limit_mode__max_limit_mph", "BIGINT" },
                { "speed_limit_mode__min_limit_mph", "BIGINT" },
                { "speed_limit_mode__pin_code_set", "BOOL" },
                { "summon_standby_mode_enabled", "BOOL" },
                { "sun_roof_percent_open", "BIGINT" },
                { "sun_roof_state", "TEXT" },
                { "timestamp", "BIGINT" },
                { "valet_mode", "BOOL" },
                { "valet_pin_needed", "BOOL" },
                { "vehicle_name", "TEXT" },
            } },
            { "vehicle_config" , new Dictionary<string, string>() {
                { "can_accept_navigation_requests", "BOOL" },
                { "can_actuate_trunks", "BOOL" },
                { "car_special_type", "TEXT" },
                { "car_type", "TEXT" },
                { "charge_port_type", "TEXT" },
                { "eu_vehicle", "BOOL" },
                { "exterior_color", "TEXT" },
                { "has_air_suspension", "BOOL" },
                { "has_ludicrous_mode", "BOOL" },
                { "key_version", "BIGINT" },
                { "motorized_charge_port", "BOOL" },
                { "perf_config", "TEXT" },
                { "plg", "BOOL" },
                { "rear_seat_heaters", "BIGINT" },
                { "rear_seat_type", "BIGINT" },
                { "rhd", "BOOL" },
                { "roof_color", "TEXT" },
                { "seat_type", "BIGINT" },
                { "spoiler_type", "TEXT" },
                { "sun_roof_installed", "BIGINT" },
                { "third_row_seats", "TEXT" },
                { "timestamp", "BIGINT" },
                { "trim_badging", "TEXT" },
                { "wheel_type", "TEXT" },
            } },
            { "vehicles" , new Dictionary<string, string>() {
                { "id", "TEXT" },
                { "vehicle_id", "TEXT" },
                { "vin", "TEXT" },
                { "display_name", "TEXT" },
                { "option_codes", "TEXT" },
                { "color", "TEXT" },
                { "tokens__0", "TEXT" },
                { "tokens__1", "TEXT" },
                { "state", "TEXT" },
                { "in_service", "BOOL" },
                { "id_s", "BIGINT" },
                { "calendar_enabled", "BOOL" },
                { "api_version", "BIGINT" },
                { "backseat_token", "BIGINT" },
                { "backseat_token_updated_at", "BIGINT" },
            } },
        };
    }
}
